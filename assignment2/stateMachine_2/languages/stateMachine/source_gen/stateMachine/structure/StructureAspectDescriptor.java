package stateMachine.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptEvent = createDescriptorForEvent();
  /*package*/ final ConceptDescriptor myConceptState = createDescriptorForState();
  /*package*/ final ConceptDescriptor myConceptStateMachine = createDescriptorForStateMachine();
  /*package*/ final ConceptDescriptor myConceptTransition = createDescriptorForTransition();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptEvent, myConceptState, myConceptStateMachine, myConceptTransition);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Event:
        return myConceptEvent;
      case LanguageConceptSwitch.State:
        return myConceptState;
      case LanguageConceptSwitch.StateMachine:
        return myConceptStateMachine;
      case LanguageConceptSwitch.Transition:
        return myConceptTransition;
      default:
        return null;
    }
  }


  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForEvent() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("stateMachine", "Event", 0xd8a98e10b8d746b5L, 0xbba34a75c192be91L, 0x4282f79c2914f836L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:df95f5d1-3767-4c42-a832-0a987ce74024(stateMachine.structure)/4792665203551828022");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForState() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("stateMachine", "State", 0xd8a98e10b8d746b5L, 0xbba34a75c192be91L, 0x4282f79c2914ff5dL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:df95f5d1-3767-4c42-a832-0a987ce74024(stateMachine.structure)/4792665203551829853");
    b.version(2);
    b.aggregate("transition", 0x4282f79c2915142dL).target(0xd8a98e10b8d746b5L, 0xbba34a75c192be91L, 0x4282f79c2915142fL).optional(true).ordered(true).multiple(true).origin("4792665203551835181").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStateMachine() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("stateMachine", "StateMachine", 0xd8a98e10b8d746b5L, 0xbba34a75c192be91L, 0x4282f79c29141f54L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:df95f5d1-3767-4c42-a832-0a987ce74024(stateMachine.structure)/4792665203551772500");
    b.version(2);
    b.associate("InitialState", 0x4282f79c29150c1cL).target(0xd8a98e10b8d746b5L, 0xbba34a75c192be91L, 0x4282f79c2914ff5dL).optional(false).origin("4792665203551833116").done();
    b.aggregate("events", 0x4282f79c2914f83bL).target(0xd8a98e10b8d746b5L, 0xbba34a75c192be91L, 0x4282f79c2914f836L).optional(true).ordered(true).multiple(true).origin("4792665203551828027").done();
    b.aggregate("states", 0x4282f79c2914ff60L).target(0xd8a98e10b8d746b5L, 0xbba34a75c192be91L, 0x4282f79c2914ff5dL).optional(true).ordered(true).multiple(true).origin("4792665203551829856").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTransition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("stateMachine", "Transition", 0xd8a98e10b8d746b5L, 0xbba34a75c192be91L, 0x4282f79c2915142fL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:df95f5d1-3767-4c42-a832-0a987ce74024(stateMachine.structure)/4792665203551835183");
    b.version(2);
    b.associate("event", 0x4282f79c29151897L).target(0xd8a98e10b8d746b5L, 0xbba34a75c192be91L, 0x4282f79c2914f836L).optional(true).origin("4792665203551836311").done();
    b.associate("target", 0x4282f79c2915189bL).target(0xd8a98e10b8d746b5L, 0xbba34a75c192be91L, 0x4282f79c2914ff5dL).optional(true).origin("4792665203551836315").done();
    return b.create();
  }
}
